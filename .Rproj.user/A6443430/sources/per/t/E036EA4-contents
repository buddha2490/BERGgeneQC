library(ggplot2)
library(gridExtra)
library(qqman)
library(readr)
library(MargotFun)
library(dplyr)
library(data.table)
rm(list=ls())



# Issues:
     #  PLINK is dropping observations if I add any PC to the model
     #   This is not happening when I run the data in R
     
     #  PLINK is dropping models on the X chromosome - most of the SNPs actually, like 13k of them
     #  Also dropping all the Y chromosome.  






# Initial processing of the association files -------------------------------------------
preprocess <- function(x){
        df <- fread(file.path("output/association analysis",x)) %>%
                select(CHR, BP, SNP, OR, P)
        df$logP <- -log10(df$P)
        df$BP <- as.numeric(df$BP)
        df$Chromosome <- factor(df$CHR,1:26,
                                c(as.character(1:22),c("X","Y","XY","M")))
        select(df, SNP, Chromosome, BP, OR, P, logP)
}

# qqplots function
qq <- function(pval,title,filename) {
     n  <- length(pval)
     df <- data.frame(
          observed = -log10(sort(pval)),
          expected = -log10(ppoints(n)),
          clower   = -log10(qbeta(p = (1 - 0.95) / 2, shape1 = 1:n, shape2 = n:1)),
          cupper   = -log10(qbeta(p = (1 + 0.95) / 2, shape1 = 1:n, shape2 = n:1))
     )
     log10Pe <- expression(paste("Expected -log"[10], plain(P)))
     log10Po <- expression(paste("Observed -log"[10], plain(P)))
     g <- ggplot(df) +
          geom_point(aes(expected, observed), shape = 20, size = 1.25) +
          geom_abline(intercept = 0, slope = 1, alpha = 1, color="red") +
          geom_line(aes(expected, cupper), linetype = 2) +
          geom_line(aes(expected, clower), linetype = 2) +
          ggtitle(title) + 
          xlab(log10Pe) +
          ylab(log10Po) +
          theme(plot.title = element_text(size=10, hjust=0.5))
     ggsave(paste0("output/association analysis/plots/",filename,".png"),
            g,
            device="png",
            width=8,height=8,dpi=400)
     
     
}


# Manhattan plots
ggManPlot <- function(dat,title,filename){
     
     
     df <- dat
     
     lst <- split(df,df$Chromosome)
     for (i in 2:length(lst)){
          maxBP <- max(lst[[i-1]]$BP)
          lst[[i]]$BP <- lst[[i]]$BP + maxBP
     }
     df2 <- Reduce(function(x,y) rbind(x,y), lst)
     
     # find chromosome BP centers for labels
     centers <- sapply(unique(df2$Chromosome), function(x){
          median(df2$BP[df2$Chromosome==x])
     })
     
     # Flag signficant SNPs
     df2$Sig <- with(df2, ifelse(
          P < 1e-5 & P > 5e-8, "Suggestive", ifelse(
               P < 5e-8, "Significant", NA))) %>%
          factor(.,c("Suggestive","Significant"))
     sig <- filter(df2, !is.na(Sig) & Sig=="Significant")
     sug <- filter(df2, !is.na(Sig) & Sig=="Suggestive")
     
     g <- ggplot(df2, aes(x=BP, y=logP, color=Chromosome)) + 
          geom_point(size=0.5, shape=16) +
          scale_color_manual(values=alpha(c(rep(c("midnightblue","darkorange4"),13)),0.8)) +
          geom_hline(yintercept=-log10(5e-8), color="red", size=0.3, linetype=2) +
          geom_hline(yintercept=-log10(1e-5), color="black",size=0.3, linetype=2) +
          scale_x_continuous(label = unique(df2$Chromosome), breaks=centers,
                             limits=c(min(df2$BP), max(df2$BP)),
                             expand = c(0.01, 0.01)) +
          scale_y_continuous(limits=c(0,10), expand=c(0.001,0.001)) +
          ylab("-log(P)") + 
          ggtitle(title) +
          theme(legend.position="none",
                panel.grid.major = element_blank(),
                panel.grid.minor = element_blank(),
                axis.text.x = element_text(size=6),
                axis.title.x = element_blank(),
                panel.background = element_rect(fill = "grey95"))
     g2 <- g + geom_point(data=sig, color="red", size=1.2, shape=16)
     g3 <- g2 + geom_point(data=sug, color="blue", size=1.2, shape=16)
     ggsave(paste0("output/association analysis/plots/",filename,".png"),
            g3, device="png", height=6, width=11, dpi=400)
}
# Load my results ---------------------------------------------------------


# Format my metadata files
loadRecent("data","SNP and Sample Metadata","Rdata")
snpMetaData <- lapply(snpMetaData, function(x){
         x[["Alleles"]] <- paste0(x[["A1"]],"/",x[["A2"]])
         return(x)
})


files <- list(
     gwas2018 = right_join(
          select(snpMetaData$snp2018,probeset_id, RSID, Alleles, MAF, HWE_P, Prop_Missing, N_QCDiscordant),
          preprocess("Logistic2018.assoc.logistic"),
          c("probeset_id"="SNP")) %>%
          rename(MAF2018 = MAF, HWE2018 = HWE_P, Missing2018=Prop_Missing, N_Discordant2018 = N_QCDiscordant),
     gwas2019 = right_join(
          select(snpMetaData$snp2019,probeset_id, RSID, Alleles, MAF, HWE_P, Prop_Missing, N_QCDiscordant),
          preprocess("Logistic2019.assoc.logistic"),
          c("probeset_id"="SNP")) %>%
          rename(MAF2019 = MAF, HWE2019 = HWE_P, Missing2019=Prop_Missing, N_Discordant2019 = N_QCDiscordant),
     gwasBoth = preprocess("Logistic_Combined.assoc.logistic"))

rm()


# Draw the manhattan plots ------------------------------------------------
ggManPlot(files$gwas2018,"Results for 2018 genotyping",paste0("Logistic - Results for 2018 data - ",Sys.Date()))
ggManPlot(files$gwas2019,"Results for 2019 genotyping",paste0("Logistic  - Results for 2019 data - ",Sys.Date()))
ggManPlot(files$gwasBoth,"Results for 2018 and 2019 data combined",paste0("Logistic - Results for combined data - ",Sys.Date()))


# Draw the qq plots -------------------------------------------------------
# qq(files$gwas2018$P,"QQ Plot for 2018 genotyping",paste0("QQ2018 - ",Sys.Date()))
# qq(files$gwas2019$P,"QQ Plot for 2019 genotyping",paste0("QQ2019 - ",Sys.Date()))
# qq(files$gwasBoth$P,"QQ Plot for 2018 and 2019 data combined",paste0("QQBoth - ",Sys.Date()))
# 


# Create a table ----------------------------------------------------------
df1 <- full_join(
                 rename(files$gwas2018,OR2018=OR, Pval2018=P) %>%
                 select(.,-BP,-logP),
                 rename(files$gwas2019,OR2019 = OR, Pval2019 = P) %>%
                 select(., probeset_id, MAF2019,HWE2019,Missing2019,N_Discordant2019,OR2019,Pval2019),
                 "probeset_id")
df2 <- full_join(df1,
                 rename(files$gwasBoth, probeset_id=SNP, OR_Both=OR, Pval_Both=P) %>%
                 select(., probeset_id, OR_Both, Pval_Both),
                 "probeset_id") %>%
       select(., probeset_id, RSID, Alleles, MAF2018, HWE2018, Missing2018, N_Discordant2018, OR2018, Pval2018,
              MAF2019, HWE2019, Missing2019, N_Discordant2019, OR2019, Pval2019,
              OR_Both, Pval_Both, -Chromosome) %>%
       right_join(select(snpMetaData$snp2018,probeset_id, CHR),., "probeset_id")
            
       

# Subset the table to p < 1e-5
final <- filter(df2, Pval2018 < 1e-5 |
                     Pval2019 < 1e-5 |
                     Pval_Both < 1e-5) # n=62 30Sept2019
final$CHR <- factor(final$CHR,1:26,
                        c(as.character(1:22),c("X","Y","XY","M")))
final <- final[order(final$CHR),]
WriteXLS::WriteXLS(final,file.path("output/Association analysis/",paste0("Results of smoking cessation GWAS - ",Sys.Date(),".XLSX")))


