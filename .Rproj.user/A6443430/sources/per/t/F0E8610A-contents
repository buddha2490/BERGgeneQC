rm(list=ls())


loadRecent("output","IBD","Rdata")
loadRecent("output","sample exclusions","Rdata")

names(ibd) <- c("ibd2018","ibd2019")
names(exclusions) <- c("samples2018","samples2019")

ibd2018 <- dplyr::select(ibd$ibd2018$fail_highIBD,FID1,FID2,PI_HAT)
ibd2019 <- dplyr::select(ibd$ibd2019$fail_highIBD,FID1,FID2,PI_HAT)
samples2018 <- dplyr::select(exclusions$samples2018,ID,Sample.Filename,Exclusion)
samples2019 <- dplyr::select(exclusions$samples2019,ID,Sample.Filename,Exclusion)

ibd2018[,c("FID1","FID2")] <- lapply(ibd2018[,c("FID1","FID2")], as.character)
ibd2019[,c("FID1","FID2")] <- lapply(ibd2019[,c("FID1","FID2")], as.character)

# Convert FID1 to Sample.Filename
ibd2018 <- left_join(ibd2018,samples2018,by=c("FID1"="ID")) %>%
     select(., -FID1) %>%
     rename(., FID1=Sample.Filename, Exclusion1=Exclusion) %>%
     left_join(., samples2018, by=c("FID2"="ID")) %>%
     select(., -FID2) %>%
     rename(., FID2=Sample.Filename, Exclusion2=Exclusion) %>%
     select(., FID1, FID2, PI_HAT, Exclusion1, Exclusion2)

ibd2019 <- left_join(ibd2019,samples2019,by=c("FID1"="ID")) %>%
     select(., -FID1) %>%
     rename(., FID1=Sample.Filename, Exclusion1=Exclusion) %>%
     left_join(., samples2019, by=c("FID2"="ID")) %>%
     select(., -FID2) %>%
     rename(., FID2=Sample.Filename, Exclusion2=Exclusion) %>%
     select(., FID1, FID2, PI_HAT, Exclusion1, Exclusion2)

ibd2018$CNV1 <- sub(".CEL",".nexus.cnv.txt",ibd2018$FID1)
ibd2018$CNV2 <- sub(".CEL",".nexus.cnv.txt",ibd2018$FID2)
ibd2019$CNV1 <- sub(".CEL",".nexus.cnv.txt",ibd2019$FID1)
ibd2019$CNV2 <- sub(".CEL",".nexus.cnv.txt",ibd2019$FID2)



ibdrecode <- list(ibd2018=ibd2018,ibd2019=ibd2019)
save(ibdrecode,file=paste0("High IBD Pairs - ",Sys.Date(),".Rdata"))


# Run on the server -------------------------------------------------------

rm(list=ls())

library(dplyr)
library(MargotFun)
library(ggplot2)
library(ggpubr)
library(gridExtra)
library(parallel)
setwd("/datadrive")

loadRecent("/mnt/briancarter","High IBD Pairs","Rdata")


ibs2018 <- ibdrecode$ibd2018 # n=36
ibs2019 <- ibdrecode$ibd2019 # n=14

# add an indicator variable for automation
ibs2018$Order <- 1:nrow(ibs2018)
ibs2019$Order <- 1:nrow(ibs2019)
rm(ibdrecode)

# Location of the CNV Files
from2018 <- file.path("/mnt/briancarter/axiom files/GWAS_2018/CNV Files")
from2019 <- file.path("/mnt/briancarter/axiom files/GWAS_2019/CNV Files")

# Generate a location list of each file
# This database converts the .CEL sample names to .nexus.cnv.txt CNV filenames
dataloc <- list()
dataloc$dat2018 <- data.frame(Path=from2018,CNV=list.files(from2018))
dataloc$dat2018$SampleName <- sub(".nexus.cnv.txt",".CEL",dataloc$dat2018$CNV)
dataloc$dat2019 <- data.frame(Path=from2019,CNV=list.files(from2019))
dataloc$dat2019$SampleName <- sub(".nexus.cnv.txt",".CEL",dataloc$dat2019$CNV)
rm(from2018,from2019)  

dat <- ibs2018
row <- 1
refyear <- 2018

bafPlot <- function(dat,row,refyear){
     
     if (refyear==2018) ref <- dataloc$dat2018
     if (refyear==2019) ref <- dataloc$dat2019
     
     
     # Step 1 - pick the samples and create a summary table
     df <- dat[row,]
     
     # Create a summary table
     newdf <- data.frame(Sample=c(df$FID1,df$FID2),
                         Exclusion=c(as.character(df$Exclusion1),
                                     as.character(df$Exclusion2)),
                         PI_Hat=c("",df$PI_HAT),
                         stringsAsFactors=F)
     
     # Vector for the 2 IDs
     fid1 <- df$FID1; fid2 <- df$FID2  
     
     # Step 1 - Read in the selected file  
     pair <- lapply(df[,c("FID1","FID2")], function(x){
          read_table2(file.path(ref$Path[1], ref$CNV[ref$SampleName==x]))})
     names(pair) <- c(fid1,fid2)
     
     # Step 2 - convert Chromosome into a factor variables  
     pair <- lapply(pair, function(x){
          chr <- c('1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16',
                   '17','18','19','20','21','22','X','Y','MT')
          x[["Chromosome"]] <- factor(x[["Chromosome"]],chr,chr)
          x
     })  
     
     # Step 3 - create a ggplot object for each of the pair
     plots <- lapply(names(pair),function(x){
          foo <- pair[[x]]
          title <- paste0("B Allele Frequency ",x)
          
          g <- ggplot(foo, aes(x=Position, y=BAF)) + 
               geom_point(size=0.01, shape=16, color="royalblue") +
               ggtitle(title) +
               theme(axis.text.x = element_blank(),
                     axis.title = element_blank(),
                     plot.title = element_text(size=10, hjust=0.5))
          g <- g + facet_wrap(~ Chromosome, nrow=1, 
                              scales="free_x",
                              strip.position="bottom") +
               theme(strip.text=element_text(size=4),
                     panel.spacing=unit(1,"points"))
          return(g)
     })
     
     # Step 4 - Build the final figure
     g <- ggarrange(tableGrob(newdf),plots[[1]], plots[[2]], ncol=1)
     rm(pair)
     gc()
     return(g)
}

BAFplots2018 <- mclapply(ibs2018$Order, function(x) bafPlot(ibs2018, x, 2018),  mc.cores = getOption("mc.cores", 8L))
names(BAFplots2018) <- paste0("plot",ibs2018$Order)
gc()
BAFplots2019 <- mclapply(ibs2019$Order, function(x) bafPlot(ibs2019, x, 2019),  mc.cores = getOption("mc.cores", 8L))
names(BAFplots2019) <- paste0("plot",ibs2019$Order)
gc()


# Save the image files
# 2018
mclapply(names(BAFplots2018), function(x){
     png(file.path("/datadrive/BAF2018",paste0(x,".png")),
         height=5, width=10, units="in", res=300)
     plot(BAFplots2018[[x]])
     dev.off()
}, mc.cores = getOption("mc.cores", 16L))

# 2019
mclapply(names(BAFplots2019), function(x){
     png(file.path("/datadrive/BAF2019",paste0(x,".png")),
         height=5, width=10, units="in", res=300)
     plot(BAFplots2019[[x]])
     dev.off()
}, mc.cores = getOption("mc.cores", 16L))

# transfer the files to cold storage so I can download locally
# Will also delete host storage originals after copying

# 2018
foo <- list.files("/datadrive/BAF2018")
mclapply(foo, function(x){
     file.copy(from = file.path("/datadrive/BAF2018",x),
               to = file.path("/mnt/briancarter/2018 Files/BAF Figures/"),
               overwrite=T)
}, mc.cores = getOption("mc.cores", 16L))
foo2 <- list.files("/mnt/briancarter/2018 Files/BAF Figures/")
lapply(foo2, function(x) file.remove(file.path("/datadrive/BAF2018",x)))
length(list.files("/datadrive/BAF2018")) # must be 0 if everything copied well
rm(foo,foo2)

# 2019
foo <- list.files("/datadrive/BAF2019")
mclapply(foo, function(x){
     file.copy(from = file.path("/datadrive/BAF2019",x),
               to = file.path("/mnt/briancarter/2019 Files/BAF Figures/"),
               overwrite=T)
}, mc.cores = getOption("mc.cores", 16L))
foo2 <- list.files("/mnt/briancarter/2019 Files/BAF Figures/")
lapply(foo2, function(x) file.remove(file.path("/datadrive/BAF2019",x)))
length(list.files("/datadrive/BAF2019")) # must be 0 if everything copied well
rm(foo,foo2)



